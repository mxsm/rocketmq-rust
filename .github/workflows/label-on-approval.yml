name: Add Label on Approval

on:
  pull_request_review:
    types: [submitted]

permissions:
  issues: write
  pull-requests: write

jobs:
  add-label:
    runs-on: ubuntu-latest

    steps:
      - name: Authenticate with GitHub App
        id: auth
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}
      - run: "echo 'The created token is masked: ${{ steps.create_token.outputs.token }}'"

      - name: Check if approval is from Collaborators
        id: check_approval
        uses: actions/github-script@v7
        with:
          github-token: ${{ steps.auth.outputs.token }}
          script: |
            const { owner, repo } = context.repo;
            const { pull_request, review } = context.payload;
            if (!review) {
              console.log('No review found.');
              return;
            }
            const collaborators = ['mxsm', 'TeslaRustor','SpaceXCN']; // Replace with actual GitHub usernames
            console.log('review:', review.state);
            console.log('review:',  review.state === 'approved');
            console.log('Collaborators:', collaborators);
            console.log('Collaborators:',  collaborators.includes(review.user.login));
            // Check if the review is approved and from a collaborator
            const isApprovedByCollaborator = review.state === 'approved' && collaborators.includes(review.user.login);
            console.log('isApprovedByCollaborator:',  isApprovedByCollaborator);
            console.log('pull_request:',  pull_request.number);
            // Return the result to the workflow
            if (isApprovedByCollaborator) { 
              await github.rest.issues.addLabels({
                owner,
                repo,
                issue_number: pull_request.number,
                labels: ['approved','auto merge']
              });
            }
            



