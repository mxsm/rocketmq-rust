name: Auto Approve Pull Requests

on:
  # Trigger on pull_request_target for better security with external contributions
  # This event allows the workflow to access secrets even for fork PRs
  pull_request_target:
    types: [opened, synchronize, reopened]
  # Also trigger when check suites complete to re-evaluate approval status
  check_suite:
    types: [completed]

permissions:
  # Required permissions for PR approval and status checks
  pull-requests: write
  checks: read

jobs:
  auto-approve:
    runs-on: ubuntu-latest
    # Ensure we're running on a PR event or a check_suite event with associated PRs
    if: github.event_name == 'pull_request_target' || (github.event_name == 'check_suite' && github.event.check_suite.pull_requests[0])
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Important: When using pull_request_target, we need to explicitly checkout the PR head
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Verify status checks
        id: check-status
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.BOT_TOKEN }}  # Token for rocketmq-rust-bot account
          script: |
            const { owner, repo } = context.repo;
            const pr = context.payload.pull_request || context.payload.check_suite.pull_requests[0];
            const sha = pr.head.sha;
            
            // Log the PR and commit information for debugging
            console.log(`Processing PR #${pr.number}, HEAD SHA: ${sha}`);
            
            // Fetch all status checks for the PR's head commit
            const { data: checks } = await github.rest.checks.listForRef({
              owner,
              repo,
              ref: sha,
              per_page: 100  // Fetch up to 100 checks
            });
            
            console.log(`Found ${checks.check_runs.length} status checks`);
            
            // Check for any failed checks
            const failedChecks = checks.check_runs.filter(check => 
              check.status === 'completed' && check.conclusion !== 'success'
            );
            
            if (failedChecks.length > 0) {
              const failedNames = failedChecks.map(f => f.name).join(', ');
              console.log(`Failed checks: ${failedNames}`);
              throw new Error('Some status checks have failed');
            }
            
            // Check for any pending checks
            const pendingChecks = checks.check_runs.filter(check => 
              check.status !== 'completed'
            );
            
            if (pendingChecks.length > 0) {
              const pendingNames = pendingChecks.map(p => p.name).join(', ');
              console.log(`Pending checks: ${pendingNames}`);
              throw new Error('Some status checks are still in progress');
            }
            
            console.log('All status checks have passed successfully');
            return true;

      - name: Auto approve PR
        if: steps.check-status.outputs.result == 'true'
        uses: hmarr/auto-approve-action@v3
        with:
          github-token: ${{ secrets.BOT_TOKEN }}  # Token for rocketmq-rust-bot account
          pull-request-number: ${{ github.event.pull_request.number }}
          review-message: "LGTM"